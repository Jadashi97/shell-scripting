
LINUX CHEAT SHEET


/bin = shows all linux commands
/boot = shows all files not being used by the OS, but by the loader
/etc = shows additional files and programs
/lib =
/mnt = mount directory usually reserved for mounting files
/opt = optional add-on applications
/root = 
/sbin = system binaries
/proc = 
/tmp = temporary directory
/home = user directories
/var = directory for sytem logs 
cd = change dir
pwd = print working directory
ls = list all dirs or files


TWO PATHS
abosule path - begins at the root directory. ="/" e.g (/Users/nyarjijada/shellScripting/plugins)
relative path - shows the location relative to your path. e.g (plugins/zsh-pluggins.txt)

Directory listing attributes
"drw" - stands directory
"lrw" - stands for link
all the rest are files

FILE CREATION
- touch
- cp 
- vi

mkdir - create directory

Find files and directories
find 
locate

WILD CARDS
* - reps zero or more characters
? - reps a single character
[] - reps a range of characters
\ - escape character
^ - (caret). reps beginning of a line or it expands the line 
$ - an end of a line


USEFUL commands

"More" - gives one page at a time.
"Tail" - give you last in the page

PIPES " | " 

This is used by the shell to connect the output of one command directly to the input of another command
e.g Command [argument] | command2 [arguments]
cd.  ls- ltr | more        =====> this will give you one page at a time.

FILE PERMISSIONS 

Unix is a multi user system
Every file and directory in the account can be protected

N  Description              ls              binary 
0  No permissions           ---              000
1  Ony execute              --x              001
2  Only write               -w-              010
3  write and execute        -wx              011
4  Only read                r--              100
5  Read and excute          r-x              101
6  Read and Write           rw-              110
7  Read,write and execute   rwx              111

3 Main types of permissions

"r"  -read
"w"  -Write
"x"  - excute


Each permission can be controlled at 3 diff levels

"u"  - user  => yourself
"g"  - group => coworkers
"o"  - other => other everyone else in the system

Example;
-rw-r--r--  ! dfi303 staff 6049 Mar 9 2020 VOLTAGE.sql

"-" => since it doesnt start with "l" or "d", this means it is a file
"rw" => [u] this means the user has read and write access
"r-" => [g] means group had read on to this file
"r- " => [o] means others have only

change permission

chmod(change mode) - change the access permission of file systems objects aka modes
chmod  a-w = remove the write permission to everyone
chmod  u+w = add the write permission to the users on the file
chmod a+w file => this will add write to everyone with the file name 
chmod a+r file =>this will add read to everyone  
chmod a+x file => this will add executable form for everyone in the file
chmod a-r File 	=> this will remove read from everyone in the file
chmod a-wx File	=> this will remove write and executable form for everyone in the file
chmod o-r File	=> this will remove read to everyone

FILE OWNERSHIP

 Two owners for file or directory
   User
   Group
 Command to change file ownership
   chown  :  change the ownership of a file
   chgrp   :  changes the group ownership of a file

Question?: Elaborate more here or any other example?

Recursive ownership options (cascade)
    -R

   rw-r--r--    1 dfi303  staff      6049 Mar  9  2020 VOLTAGE.sql
 chown  psbatch VOLTAGE.sql
   rw-r--r--    1 psbatch  staff      6049 Mar  9  2020 VOLTAGE.sql
 chgrp  psbatch VOLTAGE.sql
   rw-r--r--    1 dfi303  psbatch     6049 Mar  9  2020 VOLTAGE.sql

HELP COMMANDS

There are three types of help commands
whatis =>  used to offer a one-line overview of command, option, or a flag.
help => simplest way to get information regarding a built-in shell command. It helps you fetch information from the shell's internal documentation
man =>	manual  is the simplest way to get information regarding a built-in shell command. It helps you fetch information from the shell's internal documentation


How to run the command :

 whatis  [command]
   ex :  whatis cd
     cd(ntcl)      - Change working directory
 [command]  - - help
   ex :  ls —help

 man  command
   ex : man pwd
NAME
 pwd -- return working directory name
SYNOPSIS
    pwd [-L | -P]
DESCRIPTION
    The pwd utility writes the absolute pathname of the current working directory to the standard output.
    Some shells may provide a builtin pwd command which is similar or identical to this utility.  Consult the builtin(1) manual page.
    The options are as follows:
    -L      Display the logical current working directory.
    -P      Display the physical current working directory (all symbolic links resolved).
    If no options are specified, the -L option is assumed.

ADDING TEXT TO FILES

3 simple ways to add text to a file
vi
Redirect command output > or >>
echo > or. >>

echo “text” > File

 First create a file :
   touch test.txt
 example :
    echo “this is a test” > test.txt

 View File :
    cat test.txt

 88e9fe660ca1:~ dfi303$ touch test.txt
 88e9fe660ca1:~ dfi303$ echo "this is a test " > test.txt
 88e9fe660ca1:~ dfi303$ cat test.txt
 this is a test

Redirect command output > or >>

 Adding date to the files about
 date >> test.txt

     88e9fe660ca1:~ dfi303$ date
Mon Apr 25 23:04:19 EDT 2022
88e9fe660ca1:~ dfi303$ date >> test.txt
88e9fe660ca1:~ dfi303$ cat test.txt
this is a test
Mon Apr 25 23:04:29 EDT 2022